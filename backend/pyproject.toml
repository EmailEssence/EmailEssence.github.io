[project]
name = "email-essence"
version = "0.1.0"
description = "Email client with summarization via AI"
requires-python = ">=3.12"
readme = {text = "EE Backend", content-type = "text/plain"}
license = { text = "MIT" }

# Core dependencies with minimal version constraints
dependencies = [
    # API Framework - Core Service Layer
    "fastapi>=0.115.6",
    "uvicorn>=0.34.0",
    # Authentication & External Services
    "google-api-python-client>=2.157.0",
    "google-auth-oauthlib>=1.2.1",
    "imapclient>=3.0.1",
    "pydantic[email]>=2.6.1", # redundant
    # AI/ML Integration
    "openai>=1.59.4",
    "google-generativeai>=0.8.4",
    # Configuration Management
    "python-dotenv>=1.0.1",
    "motor>=3.7.0",
    "tenacity>=9.0.0",
    "typing>=3.10.0.0",
    "datetime>=5.5",
    "pydantic-settings>=2.7.1",
    "python-multipart>=0.0.20",
    "google[genai]>=3.0.0",
    "google-generativeai>=0.8.4",
]

[project.optional-dependencies]
# Development Environment
dev = [
    # Testing Framework
    "pytest>=8.3.4",
    "pytest-asyncio>=0.25.1",
    "pytest-cov>=6.0.0",
    "asgi-lifespan>=2.1.0",
    "httpx>=0.28.1",  # For async HTTP testing
    
    # Code Quality
    "ruff>=0.3.0",    # Modern Python linter
    "mypy>=1.9.0",    # Static type checking
    "black>=24.2.0",  # Code formatting
]

# Documentation tooling
docs = [
    "sphinx>=7.2.6",
    "sphinx-rtd-theme>=2.0.0",
]

# Production monitoring and profiling
monitoring = [
    "prometheus-client>=0.20.0",
    "opentelemetry-api>=1.23.0",
    "opentelemetry-sdk>=1.23.0",
]

[build-system]
requires = ["hatchling>=1.21.1"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["backend/app"]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "--cov=app",
    "--cov-report=term-missing",
    "--import-mode=importlib",
]
testpaths = ["app/tests"]
asyncio_mode = "auto"
python_files = "test_*.py"
python_functions = "test_*"
markers = [
    "db: Tests that interact with the database",
    "asyncio: Tests that use asyncio"
]
pythonpath = ["."] # imports

[tool.mypy]
python_version = "3.12"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
plugins = ["pydantic.mypy"]

[tool.ruff]
line-length = 88
target-version = "py312"
select = [
    "E",  # pycodestyle errors
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
src = ["app"]
