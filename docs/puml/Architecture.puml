@startuml
title High-Level Layered Architecture with Data Flow

hide stereotype

' Define the direction top to bottom for the entire diagram
top to bottom direction

' First, define the global boundary to hold all layers
rectangle "Application Architecture" as Architecture {
  
  ' Define layers as nested rectangles, listed from top to bottom
  rectangle "Presentation Layer" as presentation_layer #7aabfa {
    rectangle "Tauri Desktop App" as TauriApp #458cff{
      node "React Frontend" as ReactUI #2576f7
    }
  }

  rectangle "Middleware Layer" as middleware_layer #7aabfa{
    node "Nginx (Proxy)" as Nginx #2576f7
    node "OAuth / AuthService (Authentication)" as OAuth #2576f7
  }

  rectangle "Backend Layer" as backend_layer #7aabfa{
    node "FastAPI (Main Backend Logic)" as FastAPI #2576f7
  }

  rectangle "Data & Services Layer" as data_layer #7aabfa{
    node "MongoDB (Data Storage)" as MongoDB #2576f7
    node "Redis (Caching)" as Redis #2576f7
  }

  rectangle "Services Layer" as services_layer #7aabfa{
    node "EmailService (Email Management)" as EmailService #2576f7
    node "SummarizationService (Content Summarization)" as SummarizationService #2576f7
  }

  ' Defines the order of steps with the color of arrows
  legend
| Red | Initial Steps |
| Yellow | Intermediate Steps |
| Green | Final Steps |
endlegend
}

' Add flow arrows showing data requests (downwards) and responses (upwards)
ReactUI -[#bf0618]-> Nginx : User Requests
Nginx -[#bf0618]-> FastAPI : Proxy Requests
FastAPI -[#FFA500]-> MongoDB : Retrieve/Store Data
FastAPI -[#FFA500]-> Redis : Access/Store Cached Data
FastAPI -[#FFA500]-> EmailService : Fetch/Send Emails
FastAPI -[#FFA500]-> SummarizationService : Summarize Content

' Define return flows
SummarizationService -[#32CD32]-> FastAPI : Summarized Data
EmailService -[#32CD32]-> FastAPI : Email Data
MongoDB -[#32CD32]-> FastAPI : Retrieved Data
Redis -[#32CD32]-> FastAPI : Cached Data
FastAPI -[#32CD32]-> Nginx : Processed Response
Nginx -[#32CD32]-> ReactUI : Return Data to UI

' Authentication flow
ReactUI -[#bf0618]-> Nginx : Authentication Request
Nginx -[#FFA500]-> OAuth : Validate Session / Tokens
OAuth -[#FFA500]-> EmailService : Retrieve Access Tokens (If Needed)
EmailService -[#FFA500]-> OAuth : Return Tokens
OAuth -[#32CD32]-> Nginx : Auth Response
Nginx -[#32CD32]-> ReactUI : Auth Result

@enduml
